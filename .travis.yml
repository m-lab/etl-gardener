# Travis configuration for gardener.
#
language: go


before_install:
# Coverage tools
- go get github.com/mattn/goveralls
- go get github.com/wadey/gocovmerge

- echo Branch is ${TRAVIS_BRANCH} and Tag is $TRAVIS_TAG

# Install gcloud, for integration tests.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- source "${HOME}/google-cloud-sdk/path.bash.inc"

# Install test credentials.
# These are uploaded to travis by doing this from within the repository
# $ gcloud --project mlab-testing iam service-accounts keys create --iam-account go-travis-testing@mlab-testing.iam.gserviceaccount.com go_travis_testing.json
# $ KEY="$(base64 go_travis_testing.json)"
# $ travis env set TEST_SERVICE_ACCOUNT_mlab_testing "${KEY}"
#
# Note that anyone with github ACLs to push to a branch can hack .travis.yml
# and discover these credentials in the travis logs.
- if [[ -n "$TEST_SERVICE_ACCOUNT_mlab_testing" ]] ; then
  echo "$TEST_SERVICE_ACCOUNT_mlab_testing" | base64 -d > travis-testing.key ;
  gcloud auth activate-service-account --key-file=travis-testing.key ;
  fi

# These directories will be cached on successful "script" builds, and restored,
# if available, to save time on future builds.
cache:
  directories:
    - "$HOME/google-cloud-sdk/"

script:
# To start, run all the non-integration tests.
# Currently skipping storage tests, because they depend on GCS, and there is
# no emulator.
# TODO - separate storage tests into integration and lightweight.
- MODULES="cloud/tq cmd/gardener"
- for module in $MODULES; do
    COVER_PKGS=${COVER_PKGS}./$module/..., ;
  done
- COVER_PKGS=${COVER_PKGS::-1}  # Trim the trailing comma
- EC=0
- for module in $MODULES; do
    # Note that for modules in subdirectories, this replaces separating slashes with _.
    go test -v -coverpkg=$COVER_PKGS -coverprofile=${module.cov//\//_} github.com/m-lab/etl-gardener/$module ;
    EC=$[ $EC || $? ] ;
  done
- echo "summary status $EC" ;
- if [[ $EC != 0 ]]; then false; fi


# Rerun modules with integration tests.  This means that some tests are repeated, but otherwise
# we lose some coverage.  The corresponding cov files are overwritten, but that is OK since
# the non-integration tests are repeated.  If we change the unit tests to NOT run when integration
# test tag is set, then we would need to have separate cov files.
# Note: we do not run integration tests from forked PRs b/c the SA is unavailable.
- EC=0
- if [[ -n "$TEST_SERVICE_ACCOUNT_mlab_testing" ]] ; then
  for module in cloud/tq cmd/gardener ; do
    # Note that for modules in subdirectories, this replaces separating slashes with _.
    go test -v -coverpkg=$COVER_PKGS -coverprofile=${module.cov//\//_} github.com/m-lab/etl-gardener/$module -tags=integration ;
    EC=$[ $EC || $? ] ;
  done ;
  echo "summary status $EC" ;
  if [[ $EC != 0 ]]; then false; fi ;
  fi

# Coveralls
# Run "unit tests" with coverage.

# Coveralls
- $HOME/gopath/bin/gocovmerge *.cov > merge.cov
- $HOME/gopath/bin/goveralls -coverprofile=merge.cov -service=travis-ci

# Clean build and prepare for deployment
- cd $TRAVIS_BUILD_DIR/cmd/gardener && go build

#################################################################################
# Deployment Section
#
#  Overview:
#   1.  Test in sandbox during development
#   2.  Deploy to staging on commit to integration
#   3.  Deploy to prod when a branch is tagged with prod-* or xxx-prod-*
#
#  We want to test individual components in sandbox, and avoid stepping on each
#  other, so we do NOT automate deployment to sandbox.  Each person should
#  use a branch name to trigger the single deployment that they are working on.
#
#  We want to soak all code in staging before deploying to prod.  To avoid
#  incompatible components, we deploy ALL elements to staging when we merge
#  to integration branch.
#
#  Deployments to prod are done by deliberately tagging a specific commit,
#  typically in the integration branch, with a tag starting with prod-*.
#  DO NOT just tag the latest version in integration, as someone may have
#  pushed new code that hasn't had a chance to soak in staging.
#
#
# Deploy steps never trigger on a new Pull Request. Deploy steps will trigger
# on specific branch name patterns, after a merge to integration, or on
# an explicit tag that matches "on:" conditions.
#################################################################################

deploy:
######################################################################
#  Sandbox deployments
#  - before code review for development code in a specific branch.
######################################################################


## Service: gardener -- Service that runs various batch jobs, such as
#                           reprocessing and dedupping.
- provider: script
  script:
    # These injected params specify the project and bucket used by the service.
    INJECTED_PROJECT=mlab-sandbox INJECTED_BUCKET=archive-mlab-sandbox
    $TRAVIS_BUILD_DIR/travis/deploy_app.sh mlab-sandbox
    /tmp/mlab-sandbox.json $TRAVIS_BUILD_DIR/cmd/gardener app.yaml
  skip_cleanup: true
  on:
    repo: m-lab/etl-gardener
    all_branches: true
    condition: $TRAVIS_BRANCH == gardener-sandbox-* || $TRAVIS_BRANCH == sandbox-*

######################################################################
#  Staging deployments
#  Auto deployed on merge with master branch
#  There are no mini-deployments here.  ALL elements are redeployed
#  when merges to integration occur, and they have no other trigger.
######################################################################

###################### ALL GARDENER SERVICES ###############################
- provider: script
  script:
    INJECTED_PROJECT=mlab-staging INJECTED_BUCKET=archive-mlab-staging
    $TRAVIS_BUILD_DIR/travis/deploy_app.sh mlab-staging
    /tmp/mlab-staging.json $TRAVIS_BUILD_DIR/cmd/gardener app.yaml
  skip_cleanup: true
  on:
    repo: m-lab/etl-gardener
    branch: master

######################################################################
#  Prod deployments
#  Deployed on manual tagging with prod-*, or (group)-prod-*
#  Should be used AFTER code review, commit to integration, and staging soak.
#  Triggers when *ANY* branch is tagged with prod-*'
######################################################################

###################### GARDENER SERVICES ###############################
# Triggers when *ANY* branch is tagged with qp-prod-* OR prod-*
- provider: script
    echo "Not implemented yet"
  script:
  skip_cleanup: true
  on:
    repo: m-lab/etl-gardener
    all_branches: true
    condition: $TRAVIS_TAG == prod-*
